{
	"defaultSeverity": "error",
	"extends": [
		"tslint:all",
		"tslint-immutable/all",
		"tslint-config-prettier"
	],
	"rules": {
		"completed-docs": false,
		"file-name-casing": false,
		"interface-name": [true, "never-prefix"],
		"no-class": false,
		"no-delete": true,
		"no-expression-statement": false,
		"no-if-statement": false,
		"no-let": true,
		"no-loop-statement": true,
		"no-method-signature": false,
		"no-mixed-interface": true,
		"no-object-mutation": false,
		"no-parameter-reassignment": true,
		"no-this": false,
		"no-unsafe-any": false,
		"no-var-keyword": true,
		"object-literal-sort-keys": false,
		"prefer-method-signature": false,
		"readonly-array": true,
		"readonly-keyword": [true, "ignore-class"],
		"strict-boolean-expressions": false,
		"strict-type-predicates": false,
		// Better to have functionally similar items be close together.
		"ordered-imports": false,
		// We need private class properties to start with an underscore.
		"variable-name": [true, "allow-leading-underscore"],
		// Better to have functionally similar items be close together.
		"member-ordering": false,
		// This rule can sometimes encourage bad practices; better leave this to the PR process.
		"prefer-function-over-method": false,
		// The shorthand arrow notation is often more difficult and error-prone to refactor.
		"arrow-return-shorthand": true
	}
}
