/*
 * Copyright Â© 2018 Lisk Foundation
 *
 * See the LICENSE file at the top-level directory of this distribution
 * for licensing information.
 *
 * Unless otherwise agreed in a custom licensing agreement with the Lisk Foundation,
 * no part of this software, including this file, may be copied, modified,
 * propagated, or distributed except according to the terms contained in the
 * LICENSE file.
 *
 * Removal or modification of this copyright notice is prohibited.
 */

import java.text.SimpleDateFormat

properties([pipelineTriggers([cron('15 2 * * *')])])

def dateFormat = new SimpleDateFormat("yyyyMMdd")
def date = new Date()
def timestamp = dateFormat.format(date)

pipeline {
    agent {
        node {
            label 'nightly-build'
            // Forcing a short path workspace to prevent issues with arguments lentgh
            customWorkspace "workspace/${URLDecoder.decode(JOB_NAME)}/${BUILD_NUMBER}"
        }
    }
    options {
        skipDefaultCheckout true
    }
    stages {
    	stage("Prepare workspace") {
    		steps {
    			library identifier: 'lisk-jenkins@nh-lisk-build', retriever: modernSCM(
                 	[$class: 'GitSCMSource',
                 	remote: 'https://github.com/LiskHQ/lisk-jenkins.git'])
    		}
    	}
        stage('Build release') {
            steps {
            	script {
					def release = liskBuild(branch: '1.0.0', network: 'dev')
                 	env.VERSION =  release.version
                 	env.RELEASE_FILE =  release.file
                 	env.DESTINATION_FILE = "lisk-${env.VERSION}-${timestamp}-Linux-x86_64.tar.gz"
                }
                dir("${env.WORKSPACE}") {
                    sh """
                    mv ${env.RELEASE_FILE} ${env.DESTINATION_FILE}
                    sha256sum ${env.DESTINATION_FILE} > ${env.DESTINATION_FILE}.SHA256
                    cat ${env.DESTINATION_FILE}.SHA256
                    """
                }
            }
        }
        stage('Upload nightly release.') {
            steps {
                dir("${env.WORKSPACE}") {
                    sh """
                    s3cmd put --acl-public ${env.DESTINATION_FILE} s3:///lisk-nightly/lisk-core/${env.DESTINATION_FILE}
                    s3cmd put --acl-public ${env.DESTINATION_FILE}.SHA256 s3:///lisk-nightly/lisk-core/${env.DESTINATION_FILE}.SHA256
                    """
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
