swagger: '2.0'
info:
  description: Lisk API Documentation 
  version: "1.0.19"
  title: Lisk API Documentation 
  # Get account information by specified criteria
  contact:
    email: isabella@lightcurve.io

  license:
    name: GPL v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html

# all paths will be relative to the basePath specified
# basePath: /v1

# tags are used for organizing operations
tags:
- name: Accounts
  description: Account related API calls
- name: Blocks
  description: Block related API calls
- name: Dapps
  description: Dapps related API calls
- name: Delegates
  description: Delegates related API calls
- name: Delegates (Private)
  description: Private API calls only avaiable to localhost/Whitelist
- name: Node 
  description: Node related API calls
- name: Peers
  description: Peers related API Calls
- name: Queue
  description: Queue related API calls
- name: Signatures
  description: Signatures related API calls
- name: Transactions
  description: Transactions related API calls
- name: Votes
  description: Votes related API calls

schemes:
- https
paths:
# Accounts
  /accounts:
    get:
      tags:
      - Accounts
      summary: requests account data
      operationId: getAccount
      description: 
        By passing in the appropriate options, you can search for
        specified account in the system
      produces:
      - application/json
      parameters:
      - in: query
        name: address
        description: address to query
        required: false
        type: string
      - in: query
        name: publicKey
        description: publicKey to query
        type: string
      - in: query
        name: secondPublicKey
        description: publicKey to query
        type: string
      - in: query
        name: username
        description: Delegate username to query
        type: string
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 20
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -balance
        - +balance
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  $ref: '#/definitions/GetAccounts'
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
# Blocks
  /blocks:
    get:
      tags:
      - Blocks
      summary: requests blocks data
      operationId: getBlocks
      description: 
        By passing in the appropriate options, you can search for
        specified Block in the system
      produces:
      - application/json
      parameters:
      - in: query
        name: blockId
        description: blockId to query
        required: false
        type: string
      - in: query
        name: generatorPublicKey
        description: generatorPublicKey to query
        type: string
      - in: query
        name: height
        description: block height to query
        type: string
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 20
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -height
        - +height
        - -totalAmount
        - +totalAmount
        - -totalFee
        - +totalFee
        - -timestamp
        - +timestamp
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties:
              blocks:
                type: array
                items:
                  $ref: '#/definitions/GetBlocks'
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
# Dapps
  /dapps:
    get:
      tags:
      - Dapps
      summary: requests a list of registered Dapps
      operationId: getDapps
      description: 
        By passing in the appropriate options, you can search for
        specified a Dapp in the system, otherwise returns a list
      produces:
      - application/json
      parameters:
      - in: query
        name: transactionId
        description: registration transaction ID to query
        required: false
        type: string
      - in: query
        name: name
        description: name to query - Fuzzy Search
        type: string
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 101
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -name
        - +name
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties:
              dapps:
                type: array
                items:
                  $ref: '#/definitions/GetDapps'
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
# Delegates
  /delegates:
    get:
      tags:
      - Delegates
      summary: requests a list of Delegates data
      operationId: getDelegates
      description: 
        By passing in the appropriate options, you can search for
        specified Delegate in the system, otherwise returns a list
      produces:
      - application/json
      parameters:
      - in: query
        name: address
        description: address to query
        required: false
        type: string
      - in: query
        name: publicKey
        description: publicKey to query
        type: string
      - in: query
        name: secondPublicKey
        description: publicKey to query
        type: string
      - in: query
        name: username
        description: Exact delegate username to query
        type: string
      - in: query
        name: search
        description: Fuzzy delegateusername to query
        type: string
      - in: query
        name: rank
        description: Delegate rank to query
        type: string
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 101
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -username
        - +username
        - -rate
        - +rate
        - -productivity
        - +productivity
        - -missedBlocks
        - +missedBlocks
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties:
              delegates:
                type: array
                items:
                  $ref: '#/definitions/GetDelegates'
              count:
                type: integer
                example: 1
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
  /delegates/forgers:
    get:
      tags:
      - Delegates
      summary: requests a list of next forgers 
      operationId: getNextForgers
      description: 
        By passing in the appropriate options, you can get a list of the next forgers
      produces:
      - application/json
      parameters:
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 101
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties:
              delegates:
                type: array
                items:
                  $ref: '#/definitions/GetNextForgers'
              currentSlot:
                type: string
                example: 4368792
              currentBlockSlot:
                type: string
                example: 4368792
              count:
                type: integer
                example: 1
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
  /delegates/forging:
    put:
      tags:
      - Delegates (Private)
      summary: Toggles forging for the associated Delegate
      operationId: putForging
      description: 
        Upon passing the correct key and publicKey, forging will be enabled or disabled
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        description: Secret key for the delegate account
        required: true
        schema:
          type: object
          properties:
            key: 
              type: string
              example: "happy tree friends"
            publicKey:
              type: string
              example: "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b"
      responses:
        200:
          description: Delegate forging toggled on or off
          schema:
            $ref: '#/definitions/GetDelegateForgingStatus'
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
    get:
      tags:
      - Delegates
      summary: returns the status of Forging for a delegate 
      operationId: getForgingStatus
      description: 
        By querying by publicKey, a delegates forging status on a node can be determined
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            $ref: '#/definitions/GetDelegateForgingStatus'
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
            
# Node
  /node/constants:
    x-swagger-router-controller: node
    get:
      tags:
      - Node
      summary: requests Constants data
      operationId: getConstants
      description: 
        This API call returns all current constants data on the system
      produces:
      - application/json
      responses:
        200:
          description: Node constants
          schema:
            $ref: '#/definitions/NodeConstants'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
  /node/status:
    x-swagger-router-controller: node
    get:
      tags:
      - Node
      summary: requests Status data
      operationId: getStatus
      description:
        This API call returns all current constants data on the system
      produces:
      - application/json
      responses:
        200:
          description: Node constants
          schema:
            $ref: '#/definitions/NodeStatus'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
# Peers
  /peers:
    x-swagger-router-controller: peers
    get:
      tags:
      - Peers
      summary: requests Peers data
      operationId: getPeers
      description:
        This API call returns Peers related data
      produces:
      - application/json
      parameters:
      - in: query
        name: ip
        description: state of the peers to return
        type: string
        format: ip
      - in: query
        name: httpPort
        description: state of the peers to return
        type: integer
        format: int32
        minimum: 1
        maximum: 65535
      - in: query
        name: wsPort
        description: state of the peers to return
        type: integer
        format: int32
        minimum: 1
        maximum: 65535
      - in: query
        name: os
        description: state of the peers to return
        type: string
      - in: query
        name: version
        description: state of the peers to return
        type: string
        format: version
        minLength: 5
        maxLength: 12
      - in: query
        name: state
        description: state of the peers to return
        type: integer
        format: int32
        minimum: 0
        maximum: 2
      - in: query
        name: height
        description: state of the peers to return
        type: integer
        format: int32
        minimum: 1
      - in: query
        name: broadhash
        description: state of the peers to return
        type: string
        format: hex
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 1
        maximum: 100
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -height
        - +height
        - -version
        - +version
        - -state
        - +state
      responses:
        200:
          description: Peers List
          schema:
            type: object
            properties:
              peers:
                type: array
                items:
                  $ref: '#/definitions/Peer'
              totalReturned:
                type: integer
                example: 1
              totalCount:
                type: integer
                example: 100
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
# Signatures
  /signatures:
    post:
      tags:
      - Signatures
      summary: submits an array of signatures objects to sign multisignature transactions
      operationId: postSignatures
      description:
        submits signature(s) to sign a multisignature transaction
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Signatures object to submit to the network
        required: true
        schema:
          type: object
          properties:
            signatures:
              type: array
              items:
                $ref: '#/definitions/PostSignatures'
      responses:
        200:
          description: Signature is accepted by the node for processing
          schema:
            type: object
            properties:
              status:
                type: string
                example: Signature Accepted
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
# Transactions
  /transactions:
    get:
      tags:
      - Transactions
      summary: requests transactions data
      operationId: getTransactions
      description:
        This API call returns transactions matching filter criteria
      produces:
      - application/json
      parameters:
      - in: query
        name: transactionId
        description: transactionId to query
        type: string
      - in: query
        name: recipientId
        description: recipientId to query
        type: string
      - in: query
        name: senderId
        description: senderId to query
        type: string
      - in: query
        name: type
        description: Transaction type
        type: integer
      - in: query
        name: height
        description: Height to query
        type: integer
      - in: query
        name: minAmount
        description: Minimum amount to query
        type: string
      - in: query
        name: maxAmount
        description: Maximum amount to query
        type: string
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 20
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -amount
        - +amount
        - -fee
        - +fee
        - -type
        - +type
      responses:
        200:
          description: Transactions list
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/GetTransactions'
              count:
                type: integer
                example: 1
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
    post:
      tags:
      - Transactions
      summary: submits signed transactions for processing
      operationId: postTransaction
      description:
        submits signed transactions from lisk-js to be processed into a block
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Transaction object to submit to the network
        required: true
        schema:
          type: object
          properties:
            transactions:
              type: array
              items:
                $ref: '#/definitions/PostTransactions'
      responses:
        200:
          description: Transaction is accepted by the node for processing
          schema:
            type: object
            properties:
              status:
                type: string
                example: Transaction Accepted
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
  /transactions/unsigned:
    get:
      tags:
      - Transactions
      summary: requests Queues data for multisignatures queue
      operationId: getPendingMultisignatures
      description:
        This API call returns all queued data for unsigned multisignature transactions
      produces:
      - application/
      parameters:
      - in: query
        name: transactionId
        description: transactionId to query
        type: string
      - in: query
        name: recipientId
        description: recipientId to query
        type: string
      - in: query
        name: senderId
        description: senderId to query
        type: string
      - in: query
        name: type
        description: Transaction type
        type: integer
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 20
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -amount
        - +amount
        - -fee
        - +fee
        - -type
        - +type
      responses:
        200:
          description: Pending multisignatures transactions list
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/GetUnconfirmedMultisignaturesTransactions'
              count:
                type: integer
                example: 1
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
  /transactions/unconfirmed:
    get:
      tags:
      - Transactions
      summary: requests Queues data for unconfirmed queue
      operationId: getUnconfirmedTransactions
      description:
        This API call returns all queued data for normal transactions
      produces:
      - application/json
      parameters:
      - in: query
        name: transactionId
        description: transactionId to query
        type: string
      - in: query
        name: recipientId
        description: recipientId to query
        type: string
      - in: query
        name: senderId
        description: senderId to query
        type: string
      - in: query
        name: type
        description: Transaction type
        type: integer
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 20
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -amount
        - +amount
        - -fee
        - +fee
        - -type
        - +type
      responses:
        200:
          description: Unconfirmed Transactions list
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/GetUnconfirmedTransactions'
              count:
                type: integer
                example: 1
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
  /transactions/unprocessed:
    get:
      tags:
      - Transactions
      summary: requests Queues data for pending queue
      operationId: getPendingTransactions
      description:
        This API call returns all pending data for normal transactions
      produces:
      - application/json
      parameters:
      - in: query
        name: transactionId
        description: transactionId to query
        type: string
      - in: query
        name: recipientId
        description: recipientId to query
        type: string
      - in: query
        name: senderId
        description: senderId to query
        type: string
      - in: query
        name: type
        description: Transaction type
        type: integer
      - in: query
        name: limit
        description: specifies number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 20
      - in: query
        name: offset
        description: number of records to skip for pagination
        type: integer
        format: int32
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
        enum:
        - -amount
        - +amount
        - -fee
        - +fee
        - -type
        - +type
      responses:
        200:
          description: Unprocessed transactions list
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/GetPendingTransactions'
              count:
                type: integer
                example: 1
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
# Vote
  /votes:
    get:
      tags:
      - Votes
      summary: requests vote data for a given account
      operationId: getVotes
      description:
        This API call returns all votes by a given account
      produces:
      - application/json
      parameters:
      - in: query
        name: username
        description: Delegate username to query
        type: string
      - in: query
        name: address
        description: address to query
        type: string
      - in: query
        name: publicKey
        description: publicKey to query
        type: string
      - in: query
        name: secondPublicKey
        description: publicKey to query
        type: string
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
      responses:
        200:
          description: Votes list
          schema:
            $ref: '#/definitions/GetVotes'
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'
  /voters:
    get:
      tags:
      - Votes
      summary: requests vote data for a given delegate
      operationId: getVoters
      description:
        This API call returns all votes for a given delegate
      produces:
      - application/json
      parameters:
      - in: query
        name: username
        description: Delegate username to query
        type: string
      - in: query
        name: address
        description: address to query
        type: string
      - in: query
        name: publicKey
        description: publicKey to query
        type: string
      - in: query
        name: secondPublicKey
        description: publicKey to query
        type: string
      - in: query
        name: sort
        description: fields to sort on to query
        required: false
        type: string
      responses:
        200:
          description: Voters List
          schema:
            $ref: '#/definitions/GetVoters'
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ResponseCode400'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/ResponseCode429'

definitions:
# Accounts Models
  GetAccounts:
    type: object
    required:
    - address
    - balance
    - unconfirmedBalance
    - publicKey
    properties:
      address:
        type: string
        example: 12668885769632475474L
      balance:
        type: string
        example: 1081560729258
      unconfirmedBalance:
        type: string
        example: 0
      publicKey:
        type: string
        example: 968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b
      secondPublicKey:
        type: string
        example: null
      delegate: # Object - Reusing delegates object
        $ref: '#/definitions/AccountsDelegates'
      multisignatureMaster: # Object
        $ref: '#/definitions/MultisignatureMaster'
      multisignatureMember:
        type: array
        items:
          $ref: '#/definitions/MultisignatureMember'
  AccountsDelegates:
    type: object
    required:
    - username
    - vote
    properties:
      username:
        type: string
        example: isabella
      vote:
        type: string
        example: 1081560729258
      rewards:
        type: string
        example: 510000000
      producedBlocks:
        type: integer
        example: 20131
      missedBlocks:
        type: integer
        example: 427
      rate:
        type: integer
        example: 91
      approval:
        type: string
        example: 14.22
      productivity:
        type: string
        example: 96.41
  MultisignatureMaster:
    type: object
    properties:
      min:
        type: integer
        example: 2
      lifetime:
        type: integer
        example: 72
      signers:
        type: array
        items:
          example: [{ "address": '6251001604903637008L', "publicKey": '2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079'},{ "address": '12668885769632475474L', "publicKey": 'a4465fd76c16fcc458448076372abf1912cc5b150663a64dffefe550f96feadd'},{ "address": '12668123452434343274L', "publicKey": 'a233323232235677777754465fd76c16fcc434222663a64dffefe550f96feadd'}]
  MultisignatureMember:
    type: object
    properties:
      min:
        type: integer
        example: 2
      lifetime:
        type: integer
        example: 72
      masterAddress:
        type: string
        example: "6251001604903637008L"
      masterPublicKey:
        type: string
        example: "2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079"
# Blocks Models
  GetBlocks:
    type: object
    required:
    - blockId
    - height
    - timestamp
    - generatorPublicKey
    properties:
      blockId:
        type: string
        example: 6258354802676165798
      height:
        type: string
        example: 10815
      timestamp:
        type: string
        example: 28227090
      generatorAddress:
        type: string
        example: 12668885769632475474L
      generatorPublicKey:
        type: string
        example: 968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b
      payloadLength:
        type: string
        example: 117
      payloadHash:
        type: string
        example: 4e4d91be041e09a2e54bb7dd38f1f2a02ee7432ec9f169ba63cd1f193a733dd2
      blockSignature:
        type: string
        example: a3733254aad600fa787d6223002278c3400be5e8ed4763ae27f9a15b80e20c22ac9259dc926f4f4cabdf0e4f8cec49308fa8296d71c288f56b9d1e11dfe81e07
      confirmations:
        type: integer
        example: 200
      previousBlockId:
        type: string
        example: 15918760246746894806
      forged: # Object
        $ref: '#/definitions/BlockFees'
  BlockFees:
    type: object
    properties:
      numberOfTransactions:
        type: integer
        example: 15
      totalAmount:
        type: string
        example: 150000000
      totalFee:
        type: string
        example: 15000000
      reward:
        type: string
        example: 50000000
      totalForged:
        type: string
        example: 65000000
# Dapps Models
  GetDapps:
    type: object
    properties:
      transactionsId:
        type: string
        example: "15359945250124697273"
      icon:
        type: string
        example: "http://www.blocksafefoundation.com/header.jpg"
      category:
        type: number
        example: 8
      link:
        type: string
        example: "https://github.com/blocksafe/SDK-notice/archive/master.zip"
      tags:
        type: string
        example: "Smartgun"
      description:
        type: string
        example: "Smart Gun Netwoirk"
      name:
        type: string
        example: "Blocksafe"
# Delegates Models
  GetDelegates:
    type: object
    required:
    - username
    - vote
    properties:
      username:
        type: string
        example: isabella
      address:
        type: string
        example: 12668885769632475474L
      publicKey:
        type: string
        example: 968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b
      vote:
        type: string
        example: 1081560729258
      rewards:
        type: string
        example: 510000000
      producedBlocks:
        type: integer
        example: 20131
      missedBlocks:
        type: integer
        example: 427
      rate:
        type: integer
        example: 91
      approval:
        type: string
        example: 14.22
      productivity:
        type: string
        example: 96.41

  GetDelegateForgingStatus:
    type: object
    properties:
      forging:
        type: boolean
        example: true
      publicKey:
        type: string
        example: 968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b

  GetNextForgers:
    type: object
    properties:
      username:
        type: string
        example: isabella
      publicKey:
        type: string
        example: 2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079
      address:
        type: string
        example: 6251001604903637008L
      slot:
        type: string
        example: 4368793

# Fees Models
  Fees:
    type: object
    properties:
      send:
        type: string
        example: 10000000
      vote:
        type: string
        example: 100000000
      secondSignature:
        type: string
        example: 500000000
      delegate:
        type: string
        example: 2500000000
      multisignature:
        type: string
        example: 500000000
      dappRegistration:
        type: string
        example: 2500000000
      dappWithdrawal:
        type: string
        example: 10000000
      dappDeposit:
        type: string
        example: 10000000

# Peers related Models
  Peer:
    type: object
    properties:
      ip:
        type: string
        example: 127.0.0.1
      httpPort:
        type: integer
        example: 8000
      wsPort:
        type: integer
        example: 8001
      os:
        type: string
        example: debian
      version:
        type: string
        example: v0.8.0
      state:
        type: integer
        example: 2
      height:
        type: integer
        example: 123
      broadhash:
        type: string
        example: 258974416d58533227c6a3da1b6333f0541b06c65b41e45cf31926847a3db1ea
# Signatures related models
  PostSignatures:
    type: object
    properties:
      transactionId:
        type: string
        example: "222675625422353767"
      publicKey:
        type: string
        example: "2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079"
      signature:
        type: string
        example: "2821d93a742c4edf5fd960efad41a4def7bf0fd0f7c09869aed524f6f52bf9c97a617095e2c712bd28b4279078a29509b339ac55187854006591aa759784c205"
# State Related Models
  NodeConstants:
    type: object
    required:
    - epoch
    - milestone
    - nethash
    - reward
    - supply
    - build
    - commit
    - version
    - fees
    properties:
      epoch:
        type: string
        example: '2016-05-24T17:00:00.000Z'
      milestone:
        type: string
        example: 1081560729258
      build:
        type: string
        example: "v09:54:35 12/04/2017\n"
      commit:
        type: string
        example: 7199d4b67c3575d5f99d1c29436a02977eeb01a7
      version:
        type: string
        example: v0.8.0
      nethash:
        type: string
        example: ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511
      supply:
        type: string
        example: 10575384500000000
      reward:
        type: string
        example: 500000000
      fees:
        $ref: '#/definitions/Fees'
  NodeStatus:
    type: object
    required:
    - syncing
    - height
    - networkHeight
    - consensus
    - broadhash
    properties:
      syncing:
        type: boolean
        example: false
      height:
        type: integer
        example: 123
      networkHeight:
        type: integer
        example: 123
      consensus:
        type: integer
        example: 95
      broadhash:
        type: string
        example: 258974416d58533227c6a3da1b6333f0541b06c65b41e45cf31926847a3db1ea
# Vote related models
  GetVotes:
    type: object
    required:
    - address
    - balance
    - votesUsed
    - votesAvailable
    - votes
    properties:
      address:
        type: string
        example: 6251001604903637008L
      balance:
        type: string
        example: 15000000
      votesUsed:
        type: integer
        example: 2
      votesAvailable:
        type: integer
        example: 99
      votes:
        type: array
        items:
          $ref: '#/definitions/VotedAccount'
  VotedAccount:
    type: object
    required:
    - username
    - address
    - publicKey
    properties:
      username:
        type: string
        example: "isabella"
      address:
        type: string
        example: "12668885769632475474L"
      publicKey:
        type: string
        example: "968ba2fa993ea9dc27ed740da0daf49eddd740dbd7cb1cb4fc5db3a20baf341b"
  GetVoters:
    type: object
    required:
    - address
    - username
    - weight
    - votes
    - voters
    properties:
      address:
        type: string
        example: 6251001604903637008L
      username:
        type: string
        example: eely_delving
      weight:
        type: string
        example: 100000000
      votes:
        type: integer
        example: 1
      voters:
        type: array
        items:
          $ref: '#/definitions/VotersAccount'
  VotersAccount:
    type: object
    required:
    - address
    - balance
    properties:
      address:
        type: string
        example: "6251001604903637008L"
      balance:
        type: string
        example: "100000000"
# Transactions Models
  GetTransactions:
    type: object
    properties:
      transactionId:
        type: string
        example: 15
      amount:
        type: string
        example: 15000000
      fee:
        type: string
        example: 10000000
      type:
        type: integer
        example: 0
      height:
        type: integer
        example: 123
      blockId:
        type: string
        example: 6258354802676165798
      timestamp:
        type: integer
        example: 28227090
      senderId:
        type: string
        example: 6251001604903637008L
      senderPublicKey:
        type: string
        example: a4465fd76c16fcc458448076372abf1912cc5b150663a64dffefe550f96feadd
      senderSecondPublicKey:
        type: string
        example: 2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079
      recipientId:
        type: string
        example: 12668885769632475474L
      recipientPublicKey:
        type: string
        example: 2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079
      signature:
        type: string
        example: 72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd105ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a
      secondSignature:
        type: string
        example: 5ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd10
      # This is only present on multisignatures transactions
      multisignatures:
        type: array
        items:
          type: string
          example: '72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd105ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a'
      asset:
        type: object
      confirmations:
        type: integer
        example: 188
  PostTransactions:
    type: object
    properties:
      id:
        type: string
        example: '222675625422353767'
      type:
        type: integer
        example: 0
      amount:
        type: string
        example: '123'
      fee:
        type: string
        example: 10000000
      recipientId:
        type: string
        example: '123'
      timestamp:
        type: integer
        example: 28676212
      asset:
        type: object
        example: {}
      senderPublicKey:
        type: string
        example: a4465fd76c16fcc458448076372abf1912cc5b150663a64dffefe550f96feadd
      senderSecondPublicKey:
        type: string
        example: 2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079
      signature:
        type: string
        example: 2821d93a742c4edf5fd960efad41a4def7bf0fd0f7c09869aed524f6f52bf9c97a617095e2c712bd28b4279078a29509b339ac55187854006591aa759784c205
      secondSignature:
        type: string
        example: 62c03057eca4eee0dc719e40d0fd814186e43b27e373cb5c2f9148e48936a34c0bcf78ffef676f0e5bd5739fb94024dd8ca4e8f092e690533af3eb5d66c45f0d
# Queue related Models
  GetPendingTransactions:
    type: object
    properties:
      transactionId:
        type: string
        example: 15
      amount:
        type: string
        example: 15000000
      fee:
        type: string
        example: 100000000
      type:
        type: integer
        example: 0
      height:
        type: integer
        example: 123
      blockId:
        type: string
        example: null
      timestamp:
        type: integer
        example: 28227090
      senderId:
        type: string
        example: 6251001604903637008L
      senderPublicKey:
        type: string
        example: a4465fd76c16fcc458448076372abf1912cc5b150663a64dffefe550f96feadd
      senderSecondPublicKey:
        type: string
        example: 2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079
      recipientId:
        type: string
        example: 12668885769632475474L
      recipientPublicKey:
        type: string
        example: 2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079
      signature:
        type: string
        example: 72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd105ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a
      secondSignature:
        type: string
        example: 5ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd10
      asset:
        type: object
      propagation:
        $ref: '#/definitions/Propagation'
  GetUnconfirmedTransactions:
    type: object
    properties:
      transactionId:
        type: string
        example: 15
      amount:
        type: string
        example: 15000000
      fee:
        type: string
        example: 1000000
      type:
        type: integer
        example: 0
      timestamp:
        type: integer
        example: 28227090
      senderId:
        type: string
        example: 6251001604903637008L
      senderPublicKey:
        type: string
        example: a4465fd76c16fcc458448076372abf1912cc5b150663a64dffefe550f96feadd
      senderSecondPublicKey:
        type: string
        example: null
      recipientId:
        type: string
        example: 12668885769632475474L
      recipientPublicKey:
        type: string
        example: 2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079
      signature:
        type: string
        example: 72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd105ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a
      secondSignature:
        type: string
        example: null
      asset:
        type: object
      propagation:
        $ref: '#/definitions/Propagation'
  GetUnconfirmedMultisignaturesTransactions:
    type: object
    properties:
      transactionId:
        type: string
        example: 15
      amount:
        type: string
        example: 0
      fee:
        type: string
        example: 15000000
      type:
        type: integer
        example: 4
      timestamp:
        type: integer
        example: 28227090
      senderId:
        type: string
        example: 6251001604903637008L
      senderPublicKey:
        type: string
        example: a4465fd76c16fcc458448076372abf1912cc5b150663a64dffefe550f96feadd
      senderSecondPublicKey:
        type: string
        example: 2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079
      recipientId:
        type: string
        example: null
      recipientPublicKey:
        type: string
        example: null
      signature:
        type: string
        example: 72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd105ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a
      secondSignature:
        type: string
        example: null
      asset:
        type: object
        properties:
          multisignature:
            type: object
            properties:
              min:
                type: integer
                example: 3
              lifetime:
                type: integer
                example: 72
              keysgroup:
                example: [{ "address": '6251001604903637008L', "publicKey": '+2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079'},{ "address": '12668885769632475474L', "publicKey": '+a4465fd76c16fcc458448076372abf1912cc5b150663a64dffefe550f96feadd'},{ "address": '12668123452434343274L', "publicKey": '+a233323232235677777754465fd76c16fcc434222663a64dffefe550f96feadd'}]

      signatures:
        example: [{ "address": '6251001604903637008L', "publicKey": '2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079', "signature": '72c9b2aa734ec1b97549718ddf0d4737fd38a7f0fd105ea28486f2d989e9b3e399238d81a93aa45c27309d91ce604a5db9d25c9c90a138821f2011bc6636c60a', "timestamp": 100000 },{ "address": '12668885769632475474L', "publicKey": '2ca9a7143fc721fdc540fef893b27e8d648d2288efa61e56264edf01a2c23079', "signature": '2821d93a742c4edf5fd960efad41a4def7bf0fd0f7c09869aed524f6f52bf9c97a617095e2c712bd28b4279078a29509b339ac55187854006591aa759784c205', "timestamp": 102000 }]
      propagation:
        $ref: '#/definitions/Propagation'
      multisignatures:
        $ref: '#/definitions/MultisignaturesTransactionProperties'
  MultisignaturesTransactionProperties:
    type: object
    properties:
      min:
        type: integer
        example: 3
      currentSignatures:
        type: integer
        example: 2
      lifetime:
        type: integer
        example: 72
      ready:
        type: boolean
        example: false
  Propagation:
    type: object
    properties:
      relays:
        type: integer
        example: 1
      receivedAtUnix:
        type: integer
        example: 28227092

# Response Code Templates

  ResponseCode400:
    type: object
    properties:
      error:
        type: string
        example: Malformed query parameters.

  ResponseCode429:
    type: object
    properties:
      error:
        type: string
        example: Request limit exceeded. Please try again later.
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /LiskHQ/Lisk/1.0.18