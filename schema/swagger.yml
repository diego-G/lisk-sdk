swagger: '2.0'

info:
  description: Lisk API Documentation
  title: Lisk API Documentation
  version: '1.0.19'
  contact:
    email: isabella@lightcurve.io
  license:
    name: GPL v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html

# All paths relative to specified basePath
# basePath: /v1

basePath: /api

# Tags for organizing operations
tags:
- name: Accounts
  description: Account related API calls
- name: Blocks
  description: Block related API calls
- name: Dapps
  description: Dapps related API calls
- name: Delegates
  description: Delegates related API calls
- name: Delegates (Private)
  description: Private API calls only available to localhost/whitelist
- name: Node
  description: Node related API calls
- name: Peers
  description: Peers related API Calls
- name: Queue
  description: Queue related API calls
- name: Signatures
  description: Signatures related API calls
- name: Transactions
  description: Transactions related API calls
- name: Votes
  description: Votes related API calls

schemes:
  - https

paths:
  /peers:
    x-swagger-router-controller: peers
    get:
      tags:
      - Peers
      summary: Requests peers data
      operationId: getPeers
      description: Returns peers related data
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/ip'
        - $ref: '#/parameters/httpPort'
        - $ref: '#/parameters/wsPort'
        - $ref: '#/parameters/os'
        - $ref: '#/parameters/version'
        - $ref: '#/parameters/state'
        - $ref: '#/parameters/height'
        - $ref: '#/parameters/broadhash'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - in: query
          name: sort
          description: Fields to sort on to query
          required: false
          type: string
          enum:
            - height:asc
            - height:desc
            - version:asc
            - version:desc
      responses:
        200:
          description: Peers list
          schema:
            allOf:
            - $ref: '#/definitions/AbstractResponse'
            - properties:
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Peer'
                meta:
                  type: object
                  required:
                    - offset
                    - limit
                    - total
                  properties:
                    offset:
                      description: Offset value for the resultset
                      type: integer
                      example: 0
                    limit:
                      description: Limit applied to the resultset
                      type: integer
                      example: 100
                    total:
                      description: Total number of peers available
                      type: integer
                      example: 100
        400:
          description: Malformed query or parameters
          schema:
            $ref: '#/definitions/ParamErrorResponse'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/RequestLimitError'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

  # Node
  /node/constants:
    x-swagger-router-controller: node
    get:
      tags:
      - Node
      summary: Requests constants data
      operationId: getConstants
      description: Returns all current constants data on the system
      produces:
      - application/json
      responses:
        200:
          description: Node constants response
          schema:
            allOf:
            - $ref: '#/definitions/AbstractResponse'
            - properties:
                data:
                  $ref: '#/definitions/NodeConstants'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/RequestLimitError'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

  /node/status:
    x-swagger-router-controller: node
    get:
      tags:
      - Node
      summary: Requests status data
      operationId: getStatus
      description: Returns all current constants data on the system
      produces:
      - application/json
      responses:
        200:
          description: Node status response
          schema:
            allOf:
            - $ref: '#/definitions/AbstractResponse'
            - properties:
                data:
                  $ref: '#/definitions/NodeStatus'
        429:
          description: Too many requests, exceeded rate limit.
          schema:
            $ref: '#/definitions/RequestLimitError'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedError'

parameters:
  ip:
    name: ip
    in: query
    description: IP of the node or delegate
    type: string
    format: ip
  httpPort:
    name: httpPort
    in: query
    description: Http port of the node or delegate
    type: integer
    format: int32
    minimum: 1
    maximum: 65535
  wsPort:
    name: wsPort
    in: query
    description: Web socket port for the node or delegate
    type: integer
    format: int32
    minimum: 1
    maximum: 65535
  os:
    name: os
    in: query
    description: OS of the node
    type: string
  version:
    name: version
    in: query
    description: Lisk version run by node
    type: string
    format: version
    minLength: 5
    maxLength: 12
  state:
    name: state
    in: query
    description: Current state of the network
    type: integer
    format: int32
    minimum: 0
    maximum: 2
  height:
    name: height
    in: query
    description: Current height of the network
    type: integer
    format: int32
    minimum: 1
  broadhash:
    name: broadhash
    in: query
    description: Broadhash of the network
    type: string
    format: hex
  limit:
    in: query
    name: limit
    description: Specify limit for the result set
    type: integer
    format: int32
    minimum: 1
    maximum: 100
    default: 10
  offset:
    name: offset
    in: query
    description: Specify offset for the result set
    type: integer
    format: int32
    minimum: 0
    default: 0

definitions:
  Peer:
    type: object
    required:
      - ip
      - httpPort
      - wsPort
      - os
      - version
      - state
      - height
      - broadhash
      - nonce
    properties:
      ip:
        type: string
        example: 127.0.0.1
        format: ip
      httpPort:
        type: integer
        example: 8000
        format: int32
        minimum: 1
        maximum: 65535
      wsPort:
        type: integer
        example: 8001
        format: int32
        minimum: 1
        maximum: 65535
      os:
        type: string
        example: debian
      version:
        type: string
        example: v0.8.0
        format: version
        minLength: 5
        maxLength: 12
      state:
        type: integer
        example: 2
        format: int32
        minimum: 0
        maximum: 2
      height:
        type: integer
        example: 123
      broadhash:
        type: string
        example: 258974416d58533227c6a3da1b6333f0541b06c65b41e45cf31926847a3db1ea
        format: hex
      nonce:
        type: string
        example: sYHEDBKcScaAAAYg
        minLength: 1

  Fees:
    type: object
    required:
      - send
      - vote
      - secondSignature
      - delegate
      - multisignature
      - dappRegistration
      - dappWithdrawal
      - dappDeposit
      - data
    properties:
      send:
        type: string
        example: '10000000'
      vote:
        type: string
        example: '100000000'
      secondSignature:
        type: string
        example: '500000000'
      delegate:
        type: string
        example: '2500000000'
      multisignature:
        type: string
        example: '500000000'
      dappRegistration:
        type: string
        example: '2500000000'
      dappWithdrawal:
        type: string
        example: '10000000'
      dappDeposit:
        type: string
        example: '10000000'
      data:
        type: string
        example: '10000000'

  # State Related Models
  NodeConstants:
    type: object
    required:
      - epoch
      - milestone
      - nethash
      - reward
      - nonce
      - supply
      - build
      - commit
      - version
      - fees
    properties:
      epoch:
        type: string
        format: date-time
        example: '2016-05-24T17:00:00.000Z'
      milestone:
        type: string
        example: '500000000'
      build:
        type: string
        example: 'v09:54:35 12/04/2017'
      commit:
        type: string
        example: 7199d4b67c3575d5f99d1c29436a02977eeb01a7
        minLength: 40
        maxLength: 40
      version:
        type: string
        format: version
        example: v0.8.0
      nethash:
        type: string
        example: ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511
      supply:
        type: string
        example: '10575384500000000'
      reward:
        type: string
        example: '500000000'
      nonce:
        type: string
        example: cJmXK66xxz644d67
        minLength: 16
        maxLength: 16
      fees:
        $ref: '#/definitions/Fees'

  NodeStatus:
    type: object
    required:
      - broadhash
      - consensus
      - height
      - loaded
      - networkHeight
      - syncing
    properties:
      broadhash:
        type: string
        example: 258974416d58533227c6a3da1b6333f0541b06c65b41e45cf31926847a3db1ea
        minLength: 64
        maxLength: 64
      consensus:
        type: integer
        example: 95
        minimum: 0
        maximum: 100
      height:
        type: integer
        example: 123
        minimum: 1
      loaded:
        type: boolean
        example: true
      networkHeight:
        type: integer
        example: 123
      syncing:
        type: boolean
        example: false

  AbstractResponse:
    type: object
    required:
      - meta
      - data
      - links
    properties:
      meta:
        type: object
        description: Additional information related to the data associated in response
      data:
        description: Actual data which processed in response
      links:
        type: object
        description: Additional links to the entities associated in response

  UnexpectedError:
    type: object
    required:
      - message
    properties:
      message:
        description: Error message containing details of the error
        type: string
        minLength: 1

  RequestLimitError:
    type: object
    properties:
      error:
        type: string
        example: Request limit exceeded. Please try again later.

  ParamErrorResponse:
    type: object
    description: Response generated in case of parameters validation
    required:
      - message
      - errors
    properties:
      message:
        type: string
        description: Message stating some valdiation error occurred
        example: Validation errors
      errors:
        type: array
        description: Array of individual parameter errors
        items:
          $ref: '#/definitions/ParamError'

  ParamError:
    type: object
    description: Collection of errors on a particular parameter
    required:
      - code
      - name
      - in
      - message
    properties:
      code:
        type: string
        description: Valid error code explaining error
        example: INVALID_REQUEST_PARAMETER
      name:
        type: string
        description: Parameter name for which error triggered
        example: offset
      in:
        type: string
        description: Where the param was specified, e.g. path, query, form-data
        example: query
      message:
        type: string
        description: Detailed message explaining the error
        example: Invalid parameter (offset) value failed JSON schema validation
      errors:
        type: array
        description: Array of individual validation error for a particular param
        items:
          $ref: '#/definitions/ParamErrorMessage'

  ParamErrorMessage:
    type: object
    description: Singular error detail for a parameter
    required:
      - code
      - message
    properties:
      code:
        type: string
        description: Valid error code explaining error
        example: MINIMUM
      message:
        type: string
        description: Detailed message explaining error
        example: Value -1 is less than minimum 0
      description:
        type: string
        description: Param description specified in schema
